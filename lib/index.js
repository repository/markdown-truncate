const ASTERISK_ITALIC="*",UNDERSCORE_ITALIC="_",ASTERISK_BOLD="**",UNDERSCORE_BOLD="__",UNDERSCORE_BOLD_PLACEHOLDER_REGEXP=/UNDERSCOREBOLDPLACEHOLDER/gm,UNDERSCORE_BOLD_REGEXP=/[_]{2}([^_]+)[_]{2}/gim,ASTERISK_BOLD_PLACEHOLDER_REGEXP=/ASTERISKBOLDPLACEHOLDER/gm,ASTERISK_BOLD_REGEXP=/[*]{2}([^*]+)[*]{2}/gim,UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP=/UNDERSCOREITALICPLACEHOLDER/gm,UNDERSCORE_ITALIC_REGEXP=/[_]{1}([^_]+)[_]{1}/gim,ASTERISK_ITALIC_PLACEHOLDER_REGEXP=/ASTERISKITALICPLACEHOLDER/gm,ASTERISK_ITALIC_REGEXP=/[*]{1}([^*]+)[*]{1}/gim,HYPERLINK=/^\[([^[]+)\]\(([^)]+)\)/,replaceFormatMarkersWithPlaceholders=e=>e.replace(UNDERSCORE_BOLD_REGEXP,`${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}$1${UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source}`).replace(ASTERISK_BOLD_REGEXP,`${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}$1${ASTERISK_BOLD_PLACEHOLDER_REGEXP.source}`).replace(UNDERSCORE_ITALIC_REGEXP,`${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}$1${UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source}`).replace(ASTERISK_ITALIC_REGEXP,`${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}$1${ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source}`),replaceFormatPlaceholdersWithMarkers=e=>e.replace(UNDERSCORE_BOLD_PLACEHOLDER_REGEXP,UNDERSCORE_BOLD).replace(ASTERISK_BOLD_PLACEHOLDER_REGEXP,ASTERISK_BOLD).replace(UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP,UNDERSCORE_ITALIC).replace(ASTERISK_ITALIC_PLACEHOLDER_REGEXP,ASTERISK_ITALIC),formatMarkers=[ASTERISK_BOLD_PLACEHOLDER_REGEXP.source,UNDERSCORE_BOLD_PLACEHOLDER_REGEXP.source,ASTERISK_ITALIC_PLACEHOLDER_REGEXP.source,UNDERSCORE_ITALIC_PLACEHOLDER_REGEXP.source],formatMarkerAhead=(e,r)=>{for(let t=0,c=formatMarkers.length;t<c;t++)if(e.startsWith(formatMarkers[t]))return r[r.length-1]===formatMarkers[t]?r.pop():r.push(formatMarkers[t]),formatMarkers[t];return null},truncate=(e,r,t)=>{let c=0;const n=l=>{let L=[],R=!1,E="",s=0;for(;c<r&&s<l.length;){const u=formatMarkerAhead(l.substring(s),L);u&&(E+=u,s+=u.length,R=!0);const _=new RegExp(HYPERLINK),o=_.exec(l.substring(s));if(o){const a=o[1],p=o[2];E+=`[${n(a)}](${p})`,s+=o[0].length,R=!0}!u&&!o&&(E+=l[s],s++),R||c++,R=!1}for(E=E.trimEnd();L.length>0;)E+=L.pop();return E};let i=n(e);return t&&i.length<e.length&&(i+="..."),i};module.exports=function(e="",r={}){const{limit:t,ellipsis:c}=r||{};if(isNaN(parseInt(t,10))||e.length<=t)return e;let n=replaceFormatMarkersWithPlaceholders(e);return n=truncate(n,t,c),n=replaceFormatPlaceholdersWithMarkers(n),n};
